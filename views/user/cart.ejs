<!-- User navbar -->
<%-include("../userpartials/Navbar.ejs")%>

    <head>
        <style>
            /*======> Very small devices <======*/
            @media (max-width: 576px) {
                .product-img {
                    width: 100%;
                }

                .product-text span {
                    font-size: 12px;
                }

                .add-to-cart-btn {
                    width: 5rem;
                    font-size: 12px;
                }

                .delete-btn {
                    font-size: 12px;
                }
            }

            /*======> XS/SM devices <======*/
            @media (min-width: 576px) and (max-width: 767px) {
                .product-img {
                    width: 100%;
                }

                .product-text span {
                    font-size: 14px;
                }
            }

            /*======> MD devices <======*/
            @media (min-width: 768px) and (max-width: 991px) {
                .product-img {
                    width: 60%;
                }
            }

            /*======> LG devices <======*/
            @media (min-width: 992px) and (max-width: 1199px) {
                .product-img {
                    width: 80%;
                }
            }


            /*======> XL devices <======*/
            @media (min-width: 1200px) {
                .product-img {
                    width: 80%;
                }
            }

            .quantity-input {
                display: flex;
                align-items: center;
                justify-content: space-between;
                width: 120px;
                border: 1px solid #ccc;
                border-radius: 5px;
                overflow: hidden;
            }

            .quantity-btn {
                width: 30px;
                height: 30px;
                font-size: 18px;
                text-align: center;
                cursor: pointer;
                background-color: #f8f9fa;
                border: none;
                outline: none;
            }

            .quantity-value {
                width: 50px;
                height: 30px;
                text-align: center;
                border: none;
                outline: none;
            }

            .product-card-each , .subtotal {
                border-radius: 10px;
            }
        </style>
    </head>
    <section class="view">
        <!-- Edit -->
        <div class="cart-wrap mt-5">
            <div class="container">
                <div class="d-flex justify-content-between">
                    <h3>Your cart</h3>
                </div>
                <div class="row mb-3">
                    <% if(cartItems && cartItems.length !==0){ %>
                        <div class="product-card col-md-8">
                        <% cartItems.forEach((product,index)=>{ %>
                                <div class="product-card-each mt-4 shadow d-flex">
                                    <div class="col-4 d-flex align-items-center justify-content-center">
                                        <a href="/productDetail/" style="cursor: pointer;">
                                            <img src="/static/images/ProductImages/<%=  product.product.images[0] %>"
                                                alt="" class="product-img">
                                        </a>
                                    </div>
                                    <div class="col-8 mx-2 p-3">
                                        <p class="mt-2">
                                            <span class="product-brand">
                                                <%= product.product.brand.name %>
                                            </span>
                                            <br>
                                            <span class="product-name">
                                                <%= product.product.name %>
                                            </span>
                                            <br>
                                            <span class="product-desc">
                                                <%= product.product.description %>
                                            </span>
                                            <br>
                                            <span class="product-offerPrice text-success">
                                                ₹ <%= product.price %>
                                            </span>
                                            <br>
                                            <% if(product.product.noOfStock < 5){ %>
                                                <span class="product-lowStock text-danger">Only few left!</span>
                                            <% }else{ %>
                                                <span class="product-stock">In stock</span>
                                            <% } %>
                                            <br>
                                            <span>Item added to your cart on 
                                                <span class="item-added-date">
                                                    <%= product.addedAt.toDateString() %>
                                                </span>
                                            </span>
                                        </p>
                                        <div class="buttons mb-3 d-flex">
                                            <div class="quantity-input">
                                                <button class="quantity-btn" data-product-id="<%= product.product._id %>" onclick="decreaseQuantity(this)">-</button>
                                                <input type="text" class="quantity-value" value="<%= product.quantity %>" readonly>
                                                <button class="quantity-btn" data-product-id="<%= product.product._id %>" onclick="increaseQuantity(this)">+</button>
                                            </div>
                                            <button class="btn btn-danger btn-sm mx-2" data-product-id="<%= product.product._id %>" onclick="deleteProduct(this)"><i class="fa fa-trash"></i></button>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                        <% if(cart && cart.length !==0 ){ %>
                            <div class="product-subtotal col-12 col-md-4">
                                <div class="subtotal mt-4 shadow d-flex flex-column p-3">
                                    <div class="head text-center">
                                        <p class="text-success">Part of your order qualifies for FREE Delivery.Choose FREE Delivery option at checkout.</p>      
                                    </div>
                                    <div class="details">
                                        <h6>No of items : <span><%= cart[0].items.length %></span></h6>
                                        <h6>You will save in this purchace : <span class="purchace-discount"> ₹ <%= cart[0].totalCartDiscountPrice.toFixed(2) %></span></h6>      
                                        <h5>Subtotal : <span class="subtotal"> ₹ <%= cart[0].totalCartPrice %></span></h5>             
                                    </div>
                                    <div class="button mt-3">
                                        <button class="btn btn-warning w-100">Proceed to checkout</button>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    <% }else{ %>
                        <div class="alert alert-info text-center mt-4" role="alert">Your Cart is empty.</div>
                    <% } %>
                </div>
            </div>
        </div>
        <!-- Edit -->
    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        function deleteProduct(delbtn) {
            const productId = delbtn.getAttribute("data-product-id");
            console.log("productId :", productId)

            fetch('/deleteProductFromcart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Success",
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    })
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.message,
                        icon: "error",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "Error",
                    text: "Internal server error.",
                    icon: "error",
                    timer: 2000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            });
        }

        //Function for the quantity button
        function increaseQuantity(element) {
            var input = element.parentElement.querySelector('.quantity-value');
            var value = parseInt(input.value);
            input.value = value + 1;

            const productId = element.getAttribute("data-product-id");
            console.log("productId :", productId)
            
            fetch('/incrementCartProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Success",
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    })
                } else if(data.status === 409) {
                    Swal.fire({
                        title: "Info",
                        text: data.message,
                        icon: "info",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    })
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.message,
                        icon: "error",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "Error",
                    text: "Internal server error.",
                    icon: "error",
                    timer: 2000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            });
        }

        function decreaseQuantity(element) {
            var input = element.parentElement.querySelector('.quantity-value');
            var value = parseInt(input.value);

            if(value === 1){
                Swal.fire({
                        title: "Info",
                        text: "Please keep minimun quantity.",
                        icon: "info",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    })
                return false
            }

            input.value = value - 1;

            const productId = element.getAttribute("data-product-id");
            console.log("productId :", productId)
            
            fetch('/decrementCartProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Success",
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    })
                } else if(data.status === 409) {
                    Swal.fire({
                        title: "Info",
                        text: data.message,
                        icon: "info",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    })
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.message,
                        icon: "error",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "Error",
                    text: "Internal server error.",
                    icon: "error",
                    timer: 2000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            });
        }
    </script>

    <!-- User footer -->
    <%-include("../userpartials/Footer.ejs")%>