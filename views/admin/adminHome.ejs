<!-- Admin header -->
<%-include("../adminpartials/admin_navbar.ejs")%>

    <section class="view">
        <div class="container p-3 mt-5">
            <div class="first-box shadow d-sm-flex flex-wrap p-4 justify-content-between">
                <div class="col-sm-6 col-lg-2 mb-4">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow">
                        <i class="fa fa-users fa-2x"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total Users</p>
                            <h4 class="mb-0">
                                <%= topBoxData.totalUsers %>
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-2 mb-4">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow">
                        <i class="fa fa-box-open fa-2x"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total Orders</p>
                            <h4 class="mb-0">
                                <%= topBoxData.totalOrders %>
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-2 mb-4">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow">
                        <i class="fa fa-filter fa-2x"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total category</p>
                            <h4 class="mb-0">
                                <%= topBoxData.totalCategories %>
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-6 col-lg-2 mb-4">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow">
                        <i class="fa fa-copyright fa-2x"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total brands</p>
                            <h4 class="mb-0">
                                <%= topBoxData.totalBrands %>
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-2 mb-4">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow">
                        <i class="fa fa-clipboard fa-2x"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total coupons</p>
                            <h4 class="mb-0">
                                <%= topBoxData.totalCoupons %>
                            </h4>
                        </div>
                    </div>
                </div>
            </div>

            <div class="second mt-3 shadow p-5">
                <h4>Orders statistics</h4>
                <div class="buttons">
                    <button class="btn btn-primary btn-sm" id="daily">Daily</button>
                    <button class="btn btn-primary btn-sm" id="weekly">Weekly</button>
                    <button class="btn btn-primary btn-sm" id="monthly">Monthly</button>
                </div>
                <div class="d-md-flex justify-content-around">
                    <div class="col-md-8">
                        <div>
                            <canvas id="myCharttwo"></canvas>
                        </div>
                    </div>
                    <div class="col-md-4 mt-3 mt-md-0">
                        <div>
                            <canvas id="myChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="third mt-3 shadow p-3">
                <h4>Best selling</h4>
                <div class="d-flex flex-column flex-md-row justify-content-md-around">
                    <div id="productList" class="col-md-4">
                        <table class="table text-center table-light table-hover table-bordered">
                            <thead>
                                <tr>
                                    <th>Product Name</th>
                                    <th>Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% bsProds.forEach(product => { %>
                                    <tr>
                                      <td><%= product.name %></td>
                                      <td><%= product.count %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                    <div id="categoryList" class="col-md-4">
                        <table class="table text-center table-light table-hover table-bordered">
                            <thead>
                                <tr>
                                    <th>Category Name</th>
                                    <th>Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% bsCats.forEach(product => { %>
                                    <tr>
                                      <td><%= product.category %></td>
                                      <td><%= product.count %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                    <div id="brandList" class="col-md-4">
                        <table class="table text-center table-light table-hover table-bordered">
                            <thead>
                                <tr>
                                    <th>Brand Name</th>
                                    <th>Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% bsBrands.forEach(product => { %>
                                    <tr>
                                      <td><%= product.brand %></td>
                                      <td><%= product.count %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="four shadow p-3 mt-3">
                <h4 class="mb-2">Sales report</h4>
                <div class="mb-4 mt-3 d-flex justify-content-end">
                    <button class="btn btn-sm btn-primary" id="daily" onclick="updateSalesReport('daily')">Daily</button>
                    <button class="btn btn-sm btn-primary mx-1" id="Weekly" onclick="updateSalesReport('weekly')">Weekly</button>
                    <button class="btn btn-sm btn-primary mx-1" id="Monthly" onclick="updateSalesReport('monthly')">Monthly</button>
                    <button class="btn btn-sm btn-primary mx-1" id="Yearly" onclick="updateSalesReport('yearly')">Yearly</button>
                    <input class="border mx-1" id="salesDateRange" type="text" name="salesDateRange" value=""/>
                </div>
                <div id="ifNoData"></div>
                <table id="salesTable" class="display table table-striped" style="width:100%; ">
                    <thead>
                      <tr>
                        <th>Customer</th>
                        <th>Order ID</th>
                        <th>Ordered Date</th>
                        <th>Delivered On</th>
                        <th>Payment Type</th>
                        <th>Amount</th>
                      </tr>
                    </thead>
                    <tbody id="orderTableBody">
                    </tbody>
                  </table>
                  <div class="table-btns mt-3 d-none" id="table-btns">
                      <button type="button" class="btn btn-sm btn-primary text-light"
                      onclick="return ExportToExcel()"><i class="bi bi-file-earmark-spreadsheet-fill"></i> Export to Excel</i> </button>
                      <button type="button" class="btn btn-sm btn-primary text-light"
                      onclick="return printTable()"><i class="bi bi-printer"></i> Print</i> </button>
                    </div>
                </div>
              </div>
            </div>

        </div>
    </section>

    <div id="monthlyjsonData" class="d-none">
        <%= JSON.stringify(timedOrders.monthlyOrders) %>
    </div>
    <div id="weeklyjsonData" class="d-none">
        <%= JSON.stringify(timedOrders.weeklyOrders) %>
    </div>
    <div id="dailyjsonData" class="d-none">
        <%= JSON.stringify(timedOrders.dailyOrders) %>
    </div>

    <!--  Script for sweet alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <!-- Script for the chart js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Script for the export to excel -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>

    <!-- Script for the data range picker -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <script>

        ////// Chart one \\\\\\
        const ctx = document.getElementById('myChart');

        const chartOne = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Online', 'Cod', 'Wallet', 'Wallet with online'],
                datasets: [{
                    label: '# of Votes',
                    data: ["<%= paymentCount.razorpayCount %>", "<%= paymentCount.codCount %>", "<%= paymentCount.walletCount %>", "<%= paymentCount.walletWithRazorpayCount %>"],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        ////// Chart two \\\\\\
        const ctxtwo = document.getElementById('myCharttwo');

        const chartTwo = new Chart(ctxtwo, {
            type: 'line',
            data: {
                labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                datasets: [{
                    label: 'Orders',
                    data: [12, 19, 3, 5, 2, 3, 4],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const dailybtn = document.getElementById('daily')
        const weeklybtn = document.getElementById('weekly')
        const monthlybtn = document.getElementById('monthly')

        ////// Daily orders for chart two \\\\\\
        window.addEventListener('DOMContentLoaded', (event) => {

            const dailyJsonDataElement = document.getElementById("dailyjsonData");
            const dailyData = JSON.parse(dailyJsonDataElement.innerText);

            const hoursOfDay = Array.from({ length: 24 }, (_, i) => {
                const hour = i === 0 ? 12 : (i <= 12 ? i : i - 12);
                const period = i < 12 ? 'AM' : 'PM';
                return `${hour} ${period}`;
            });

            const ordersPerHour = Array(24).fill(0);

            const updateDailyChart = (dailyData) => {
                dailyData.forEach(order => {
                    const hour = order.hour
                    ordersPerHour[hour] = order.count
                });

                chartTwo.data.labels = hoursOfDay;
                chartTwo.data.datasets[0].data = ordersPerHour;
                chartTwo.update();
            };

            dailybtn.addEventListener('click', function () {
                updateDailyChart(dailyData);
            });

            updateDailyChart(dailyData);
        });

        ////// Weekly orders for chart two \\\\\\
        const weeklyJsonDataElement = document.getElementById("weeklyjsonData");
        const weeklyData = JSON.parse(weeklyJsonDataElement.innerText);

        weeklybtn.addEventListener("click", function () {
            const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            const weeklyCount = Array(7).fill(0);

            weeklyData.forEach(order => {
                const day = order.dayOfWeek - 1
                weeklyCount[day] = order.count;
            });
               
            chartTwo.data.labels = daysOfWeek;
            chartTwo.data.datasets[0].data = weeklyCount;
            chartTwo.update();
        });

        ////// monthly orders for chart two \\\\\\
        const monthlyJsonDataElement = document.getElementById("monthlyjsonData");
        const monthlyData = JSON.parse(monthlyJsonDataElement.innerText);

        monthlybtn.addEventListener('click', function () {
            const monthsOfYear = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            const monthlyCount = Array(12).fill(0);

            monthlyData.forEach(order => {
                const month = order.month - 1;
                monthlyCount[month] = order.count;
            });

            chartTwo.data.labels = monthsOfYear;
            chartTwo.data.datasets[0].data = monthlyCount;
            chartTwo.update();
        });

        ////// document load sales data \\\\\\
        $(document).ready(function() {
            updateSalesReport("daily");
        });

        ////// Set date for sales report \\\\\\
        const currentDate = new Date();
        currentDate.setHours(0, 0, 0, 0);

        $('#salesDateRange').daterangepicker({
            minSpan: {
                days: 7
            },
            maxSpan: {
                days: 31
            }
        }, function(start, end) {
            const startDate = start.toDate();
            const endDate = end.toDate();

            startDate.setHours(0, 0, 0, 0);
            endDate.setHours(0, 0, 0, 0);

            if (startDate > currentDate || endDate > currentDate) {
                Swal.fire({
                    icon: "info",
                    title: "Invalid Date",
                    text: "Please select a date that is less than or equal to today.",
                    showConfirmButton: true,
                    confirmButtonText: "Ok"
                });
                return false;
            }

            updateSalesReportByDate(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));
        });


        ////// update sales report \\\\\\
        function updateSalesReport(timePeriod) {
            fetch(`/admin/salesReport?timePeriod=${timePeriod}`)
                .then(response => response.json())
                .then(data => {

                $('#salesTable').DataTable().destroy();

                const tableBody = document.getElementById('orderTableBody');
                tableBody.innerHTML = '';

                data.salesData.forEach(order => {
                    const row = document.createElement('tr');

                    row.innerHTML = `
                        <td>${order.userId.fullname}</td>
                        <td>${order._id.slice(-6)}</td>
                        <td>${moment(order.orderDate).format('DD-MM-YYYY HH:mm')}</td>
                        <td>${moment(order.statusDate).format('DD-MM-YYYY HH:mm')}</td>

                        <td>${order.paymentMethod}</td>
                        <td>₹ ${order.orderTotal}</td>
                    `;

                    tableBody.appendChild(row);
                    const tableBtns = document.getElementById('table-btns')
                    tableBtns.classList.remove("d-none")
                });

                $('#salesTable').DataTable();
                });
            }

        ////// update Sales report by date \\\\\\
        function updateSalesReportByDate(startDate, endDate) {
            fetch(`/admin/salesReport?startDate=${startDate}&endDate=${endDate}`)
                .then(response => response.json())
                .then(data => {

                $('#salesTable').DataTable().destroy();
                    const tableBody = document.getElementById('orderTableBody');
                    tableBody.innerHTML = '';
                
                    data.salesData.forEach(order => {
                        const row = document.createElement('tr');
                        
                        row.innerHTML = `
                        <td>${order.userId.fullname}</td>
                        <td>${order.orderId}</td>
                        <td>${moment(order.orderDate).format('DD-MM-YYYY HH:mm')}</td>
                        <td>${moment(order.statusDate).format('DD-MM-YYYY HH:mm')}</td>
                        
                        <td>${order.paymentMethod}</td>
                        <td>₹ ${order.orderTotal}</td>
                        `;
                        
                        tableBody.appendChild(row);
                        const tableBtns = document.getElementById('table-btns')
                        tableBtns.classList.remove("d-none")
                    });
                $('#salesTable').DataTable();
            });
        }

        
        ////// Sales report excel \\\\\\
        function ExportToExcel(type, fn, dl) {
            var elt = document.getElementById("salesTable");
            var ws = XLSX.utils.table_to_sheet(elt);
            
            ////// Set column widths \\\\\\
            ws["!cols"] = [];
            var colCount = elt.rows[0].cells.length;
            for (var i = 0; i < colCount; i++) {
                ws["!cols"].push({ wpx: 100 });
            }
            
            ////// Set row heights \\\\\\
            ws["!rows"] = [];
            var rowCount = elt.rows.length;
            for (var i = 0; i < rowCount; i++) {
                ws["!rows"].push({ hpt: 20 });
            }
            
            var wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

            return dl ?
                XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }) :
                XLSX.writeFile(wb, fn || ('sales_report.' + (type || 'xlsx')));
            }

            ////// print the table data in pdf format \\\\\\
            function printTable() {
                var table = document.getElementById("salesTable");
                var newWin = window.open('', 'Print-Window');
                newWin.document.open();

                newWin.document.write('<html><head><title>Print Table</title>');
                newWin.document.write('<style>table { border-collapse: collapse; } table, th, td { border: 1px solid black; padding: 8px; }</style>');
                newWin.document.write('</head><body>');

                newWin.document.write('<table>');

                for (var i = 0; i < table.rows.length; i++) {
                    newWin.document.write('<tr>');
                    for (var j = 0; j < table.rows[i].cells.length; j++) {
                    newWin.document.write('<td>' + table.rows[i].cells[j].innerHTML + '</td>');
                    }
                    newWin.document.write('</tr>');
                }
                newWin.document.write('</table>');
                newWin.document.write('</body></html>');

                newWin.document.close();
                setTimeout(function () { newWin.print(); }, 10);
            }

    </script>

    <!-- Admin footer -->
    <%-include("../adminpartials/admin_footer.ejs")%>
