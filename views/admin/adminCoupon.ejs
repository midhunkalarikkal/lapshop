<!-- Admin header -->
<%-include("../adminpartials/admin_navbar.ejs")%>

    <section class="view">
        <div class="container mt-5">
            <!-- Heading and coupon adding button start -->
            <div class="row">
                <div class="head col-md-10 offset-md-1 d-flex justify-content-between align-items-center">
                    <h1>Coupons</h1>
                    <button type="button" class="btn btn-outline-success btn-sm" data-bs-toggle="modal"
                        data-bs-target="#exampleModal">Add new coupon</button>
                </div>
                <hr>
            </div>
            <!-- Heading and coupon adding button end -->
            <div class="row">
                <div class="col-md-10 offset-md-1">
                    <div class="table-responsive ">
                        <% if(couponData.length !==0){ %>
                            <table class="table text-center table-striped my-5 p-1">
                                <thead>
                                    <tr class="table-dark">
                                        <th class="text-center text-light">ID</th>
                                        <th class="text-center text-light">Name</th>
                                        <th class="text-center text-light">code</th>
                                        <th class="text-center text-light">Start Date</th>
                                        <th class="text-center text-light">End Date</th>
                                        <th class="text-center text-light">Amount</th>
                                        <th class="text-center text-light">Min Amount</th>
                                        <th class="text-center text- light">Controls</th>
                                        <th class="text-center text-light">Edit</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% couponData.forEach((coupon , index)=>{ %>
                                        <tr class="align-middle">
                                            <td>
                                                <%= index+1 %>
                                            </td>
                                            <td>
                                                <%= coupon.couponName %>
                                            </td>
                                            <td>
                                                <%= coupon.couponCode %>
                                            </td>
                                            <td>
                                                <%= coupon.startDate.toLocaleDateString() %>
                                            </td>
                                            <td>
                                                <%= coupon.endDate.toLocaleDateString() %>
                                            </td>
                                            <td>
                                                <%= coupon.couponAmount %>
                                            </td>
                                            <td>
                                                <%= coupon.minAmount %>
                                            </td>
                                            <td>
                                                <input type="radio" class="coupon-switch" data-cpId="<%= coupon._id %>" id="block_<%= coupon._id %>" name="block<%= coupon._id %>" value="block" <% if(coupon.isBlocked) { %>checked<% } %>>
                                                <label for="block_<%= coupon._id %>" class="text-danger">Block</label>
                                                <input type="radio" class="coupon-switch" data-cpId="<%= coupon._id %>" id="unblock_<%= coupon._id %>" name="block<%= coupon._id %>" value="unblock" <% if(!coupon.isBlocked) { %>checked<% } %>>
                                                <label for="unblock_<%= coupon._id %>" class="text-success">Unblock</label>
                                            </td>
                                            <td>
                                                <button 
                                                    class="text-success edit-coupon-btn"
                                                    data-cpId="<%= coupon._id %>" 
                                                    style="border: 0;">
                                                    <i class="fas fa-edit fa-lg mx-1"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                </tbody>
                            </table>
                            <% } else { %>
                                <div class="alert alert-info text-center" role="alert">No Coupons found in the database.
                                </div>
                                <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Modal start -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add New Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="couponForm" action="/admin/AddNewCoupon" method="POST">
                        <div class="mb-3">
                            <label for="couponName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="couponName" name="couponName" required oninput="checkName()">
                            <span id="nameError" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="couponCode" class="form-label">Code</label>
                            <input type="text" class="form-control" id="couponCode" name="couponCode" required oninput="checkCode()">
                            <span id="codeError" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="couponStartDate" class="form-label mx-2">Start date</label>
                            <input type="date" name="couponStartDate" id="couponStartDate"
                            class="form-control form-control-md" required>
                            
                        </div>
                        <div class="mb-3">
                            <label for="couponEndDate" class="form-label mx-2">End date</label>
                            <input type="date" name="couponEndDate" id="couponEndDate"
                            class="form-control form-control-md" required>
                            
                        </div>
                        <div class="mb-3">
                            <label for="couponMinAmount" class="form-label mx-2">Minimum order amount</label>
                            <input type="text" name="couponMinAmount" id="couponMinAmount"
                            class="form-control form-control-md" required min="0" max="50000" oninput="checkMinAmount()">
                            <span id="minAmountError" class="text-danger"></span>
                            
                        </div>
                        <div class="mb-3">
                            <label for="couponAmount" class="form-label mx-2">Amount / percentage</label>
                            <input type="text" name="couponAmount" id="couponAmount"
                            class="form-control form-control-md" required oninput="checkAmount()">
                            <span id="amountError" class="text-danger"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" id="save" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal end -->

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        ////// To check the coupon code \\\\\\
        function checkCode() {
            const codeInput = document.getElementById('couponCode');
            const couponCode = codeInput.value.trim();
            const codeError = document.getElementById('codeError');

            const codePattern = /^[A-Z0-9]+$/;

            if (couponCode === "") {
                codeInput.classList.remove('is-invalid');
                codeError.textContent = '';
                return false;
            }
            if (!codePattern.test(couponCode)) {
                codeInput.classList.add('is-invalid');
                codeError.textContent = 'Code must contain uppercase and numbers.';
                return false;
            } else if (couponCode.length < 5 || couponCode.length > 10) {
                codeInput.classList.add('is-invalid');
                codeError.textContent = 'Code must be between 5 and 10 characters long';
                return false;
            } else {
                codeInput.classList.remove('is-invalid');
                codeError.textContent = '';
                return true;
            }
        }

        ////// To check the coupon name \\\\\\
        function checkName() {
            const nameInput = document.getElementById('couponName');
            const couponName = nameInput.value.trim();
            const nameError = document.getElementById('nameError');

            const namePattern = /^[A-Za-z\s]+$/;

            if (couponName === "") {
                nameInput.classList.remove('is-invalid');
                nameError.textContent = '';
                return false;
            }
            if (!namePattern.test(couponName)) {
                nameInput.classList.add('is-invalid');
                nameError.textContent = 'Name must contain alphabets.';
                return false;
            } else if (couponName.length < 5 || couponName.length > 15) {
                nameInput.classList.add('is-invalid');
                nameError.textContent = 'Code must be between 5 and 15 characters long';
                return false;
            } else {
                nameInput.classList.remove('is-invalid');
                nameError.textContent = '';
                return true;
            }
        }

        ////// To check the coupon minimum order amount \\\\\\
        function checkMinAmount() {
            const couponMinAmountInput = document.getElementById('couponMinAmount');
            const couponMinAmount = couponMinAmountInput.value.trim();
            const minAmountError = document.getElementById('minAmountError');

            const minAmountPattern = /^[1-9]\d*$/;

            if (couponMinAmount === "") {
                couponMinAmountInput.classList.remove('is-invalid');
                minAmountError.textContent = '';
                return false;
            }
            if (!minAmountPattern.test(couponMinAmount)) {
                couponMinAmountInput.classList.add('is-invalid');
                minAmountError.textContent = 'Amount must contain positive numbers.';
                return false;
            } else if (couponMinAmount < 100 || couponMinAmount > 50000) {
                couponMinAmountInput.classList.add('is-invalid');
                minAmountError.textContent = 'Amount must be between 100 and 50000.';
                return false;
            } else {
                couponMinAmountInput.classList.remove('is-invalid');
                minAmountError.textContent = '';
                return true;
            }
        }

        ////// To check the coupon amount / percentage \\\\\\
        function checkAmount() {
            const couponAmountInput = document.getElementById('couponAmount');
            const couponAmount = couponAmountInput.value.trim();
            const amountError = document.getElementById('amountError');

            const amountPattern = /^[1-9]\d*$/;

            if (couponAmount === "") {
                couponAmountInput.classList.remove('is-invalid');
                amountError.textContent = '';
                return false;
            }
            if (!amountPattern.test(couponAmount)) {
                couponAmountInput.classList.add('is-invalid');
                amountError.textContent = 'Amount must contain positive numbers.';
                return false;
            } else if (couponAmount < 1 || couponAmount > 5000) {
                couponAmountInput.classList.add('is-invalid');
                amountError.textContent = 'Amount must be between 1 and 5000.';
                return false;
            } else {
                couponAmountInput.classList.remove('is-invalid');
                amountError.textContent = '';
                return true;
            }
        }

       

        ////// To add new home coupon through fetch \\\\\
        document.getElementById("save").addEventListener("click", async function () {
            const couponName = document.getElementById("couponName").value;
            const couponCode = document.getElementById("couponCode").value;
            const couponStartDate = document.getElementById("couponStartDate").value;
            const couponEndDate = document.getElementById('couponEndDate').value;
            const couponMinAmount = document.getElementById('couponMinAmount').value
            const couponAmount = document.getElementById('couponAmount').value;

            const couponBody = {
                couponName, couponCode, couponStartDate, couponEndDate, couponAmount , couponMinAmount
            }

            if( !checkCode() || !checkName() || !checkMinAmount() || !checkAmount()){
                Swal.fire({
                        icon: 'Erro',
                        title: 'Error in input field!',
                    })
                    return false;
            }

            console.log(couponBody)

            try {
                const response = await fetch("/admin/AddNewCoupon", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(couponBody)
                });

                $('#exampleModal').modal('hide');
                if (response.ok) {
                    const data = await response.json();
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message
                    }).then(() => {
                        location.reload();
                    });
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: errorData.error
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An unexpected error occurred. Please try again.'
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'Network error. Please try again.'
                });
            }
        });

        ///// To get edit page for editing a specific coupon \\\\\\
        document.querySelectorAll('.edit-coupon-btn').forEach(button => {
            button.addEventListener('click', function () {
                const couponId = this.dataset.cpid;
                console.log(couponId)
                window.location.href = `/admin/couponEdit/${couponId}`;
            });
        });

        ////// Script for block and unblock the user \\\\\\
        document.querySelectorAll('.coupon-switch').forEach(function (couponSwitch) {
            couponSwitch.addEventListener('change', function () {
                var couponId = this.dataset.cpid;
                console.log("couponId :",couponId)
                var blockStatus = this.value;

                Swal.fire({
                    title: 'Confirmation',
                    text: 'Are you sure you want to change the block status?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/blockCoupon/${couponId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ blockStatus: blockStatus })
                        })
                            .then(response => {
                                if (response.ok) {
                                    return response.json();
                                } else {
                                    throw new Error('Failed to update user block status.');
                                }
                            })
                            .then(data => {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: 'Coupon block status has been updated.'
                                });
                            })
                            .catch(error => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: error.message
                                });
                            });
                    } else {
                        location.reload();
                    }
                });
            });
        });




        ////// Script for the data table \\\\\\
        $(document).ready(function () {
            $("table").DataTable({
                order: [0, 'desc']
            })
        })
    </script>

    <!-- Admin footer -->
    <%-include("../adminpartials/admin_footer.ejs")%>