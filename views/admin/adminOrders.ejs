<!-- Admin header -->
<%-include("../adminpartials/admin_navbar.ejs")%>

<section class="view">
    <div class="container mt-5 ">

        <div class="row">
            <div class="head col-md-10 offset-md-1 d-flex justify-content-between align-items-center">
                <h1>Orders</h1>
            </div>
            <hr>
        </div>

        <div class="row d-flex flex-row align-items-center justify-content-center mb-5">
            <div class="table-responsive col-lg-10">
                <table class="table text-center table-striped my-5 p-1">
                    <thead>
                        <tr class="table-dark">
                            <th class="text-center text-light">OrderId</th>
                            <th class="text-center text-light">Date</th>
                            <th class="text-center text-light">Items</th>
                            <th class="text-center text-light">Order status</th>
                            <th class="text-center text-light">Order total</th>
                            <th class="text-center text-light"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if(orders && Array.isArray(orders)){ %>
                            <% for(let i = 0; i < orders.length; i++){ %>
                                <tr class="align-middle">
                                    <td>
                                        <%= orders[i].orderId  %>
                                    </td>
                                    <td>
                                        <%= orders[i].orderDate.toLocaleDateString(undefined, { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }) %>
                                    </td>
                                    <td>
                                        <% for(let j = 0; j < orders[i].orderedItems.length; j++){ %>
                                            <%= orders[i].orderedItems[j].product.brand.name %>
                                            <%= orders[i].orderedItems[j].product.name %> ,<br>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if(orders[i].status === "Delivered" || orders[i].status === "Cancelled" || orders[i].status === "Admin cancelled" || orders[i].status === "Request return" || orders[i].status === "Return accepted" || orders[i].status === "Return rejected"){ %>
                                            <% if(orders[i].status === "Cancelled" || orders[i].status === "Admin cancelled"){ %>
                                                <span class="text-danger"><%= orders[i].status %></span>   
                                            <% }else if(orders[i].status === "Request return"){ %>
                                                <div class="d-flex align-items-center">
                                                    <span class=""><%= orders[i].status %></span>
                                                    <button class="btn" id="order-returnAccept" onclick="returnAccept(this)" data-orderId="<%= orders[i]._id %>"><i class="fa-solid fa-check text-sucess"></i></button>
                                                    <button class="btn" id="order-returnReject" onclick="returnReject(this)" data-orderId="<%= orders[i]._id %>"><i class="fa-solid fa-xmark text-danger"></i></button>      
                                                </div>
                                            <% }else{ %>
                                                <span class=""><%= orders[i].status %></span>
                                            <% } %>
                                        <% }else{ %>
                                            <select class="form-select w-75" id="orderStatus_<%= orders[i]._id %>" onchange="updateOrderStatus('<%= orders[i]._id %>')">
                                                <option value="Processing" <% if (orders[i].status === 'Processing') { %> selected <% } %>>Processing</option>
                                                <option value="Shipped" <% if (orders[i].status === 'Shipped') { %> selected <% } %>>Shipped</option>
                                                <option value="Delivered" <% if (orders[i].status === 'Delivered') { %> selected <% } %>>Delivered</option>
                                            </select>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if(orders[i].walletDebitedAmount && orders[i].walletDeitedAmount !== 0){ %>
                                            ₹ <%= orders[i].orderTotal + orders[i].walletDebitedAmount %>
                                        <% }else{ %>
                                            ₹ <%= orders[i].orderTotal %>
                                        <% } %>
                                    </td>
                                    <td class="">
                                        <button class="btn btn-primary btn-sm mt-3" id="prod-detail" onclick="goToOrderDetail(this)" data-orderId="<%= orders[i]._id %>">Details</button>
                                        <% if(orders[i].status !== "Delivered" && orders[i].status !== "Cancelled" && orders[i].status !== "Admin cancelled" && orders[i].status !== "Request return" && orders[i].status !== "Return accepted" && orders[i].status !== "Return rejected"){ %>
                                            <button class="btn btn-danger btn-sm mt-3" id="prod-detail" onclick="cancelOrder(this)" data-orderId="<%= orders[i]._id %>">Cancel</button>
                                        <% } %>
                                    </td>
                                </tr>
                            <% } %>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
        
    </div>
</section>

<!-- Script for the sweet alert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    
     ////// To cancel a order \\\\\\
     function cancelOrder(button){
            const orderId = button.getAttribute("data-orderId")

            Swal.fire({
                title: 'Are you sure want to cancel this order?',
                text: 'This cancel cannot be undone!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/admin/cancelOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ orderId })
                    })
                    .then(response => {
                        return response.json(); 
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: data.message,
                                showConfirmButton: true,
                                confirmButtonText: 'OK'
                            }).then(()=>{
                                location.reload()
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message,
                                timer: 3000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'An error occurred. Please try again later.',
                            timer: 3000,
                            timerProgressBar: true,
                            showConfirmButton: false
                        });
                    });
                }
            });
        }

    // Script for redirecting to order detailed page
    function goToOrderDetail(button) {
        const orderId = button.getAttribute('data-orderId');
        window.location.href = `adminOrderDetail/${orderId}`;
    }

    ////// To change the order status \\\\\\
    function updateOrderStatus(orderId) {
        const selectElement = document.getElementById(`orderStatus_${orderId}`);
        const selectedStatus = selectElement.value;

        fetch('/admin/updateOrderStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId, selectedStatus })
        })
        .then(response => {
            return response.json(); 
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    showConfirmButton: true,
                    confirmButtonText: 'OK'
                }).then(()=>{
                    location.reload()
                })
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: data.message,
                    timer: 3000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            }
        })
        .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred. Please try again later.',
                    timer: 3000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            });
        }

    ////// To accept a return request from user \\\\\\
    function returnAccept(button) {
        const orderId = button.getAttribute("data-orderId")

        fetch('/admin/returnAccept', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId})
        })
        .then(response => {
            return response.json(); 
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    showConfirmButton: true,
                    confirmButtonText: 'OK'
                }).then(()=>{
                    location.reload()
                })
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: data.message,
                    timer: 3000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            }
        })
        .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred. Please try again later.',
                    timer: 3000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            });
        }

     ////// To reject a return request from user \\\\\\
     function returnReject(button) {
        const orderId = button.getAttribute("data-orderId")

        fetch('/admin/returnReject', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId})
        })
        .then(response => {
            return response.json(); 
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    showConfirmButton: true,
                    confirmButtonText: 'OK'
                }).then(()=>{
                    location.reload()
                })
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: data.message,
                    timer: 3000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            }
        })
        .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred. Please try again later.',
                    timer: 3000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
            });
        }

    ////// Script for the data table \\\\\\
    $(document).ready(function(){
        $("table").DataTable({
            ordering : false
        })
    })

    </script>
    
    <!-- Admin footer -->
    <%-include("../adminpartials/admin_footer.ejs")%>
