<!-- Admin navbar -->
<%-include("../adminpartials/admin_navbar.ejs")%>

<head>
    <!-- Css for the admin data edit form -->
    <link rel="stylesheet" href='/static/css/admin_dataEdit.css' type="text/css">
    <!-- Edit start -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css"
    />
    <!-- Edit end -->
    <style>
        .thumbnail {
            position: relative;
        }

        .close-btn {
            position: absolute;
            top: 4px;
            right: 6px;
            transform: translate(50%, -50%);
            padding: 0;
            background: transparent;
            border: none;
            cursor: pointer;
            font-size: 25px;
            color: #ff1616;
            z-index: 1; 
        }

        .close-btn-background {
            position: absolute;
            top: 7px;
            right: 6.5px;
            transform: translate(50%, -50%);
            width: 13px;
            height: 13px;
            background-color: rgba(194, 194, 194, 0.82);
            z-index: 0; 
        }

        .file-label{
            display: block;
            position: relative;
            color: white;
            font-size: 18px;
            text-align: center;
            padding: 12px 0;
            margin: auto;
            border-radius: 5px;
            cursor: pointer;
        }

        .num-of-files{
            text-align: center;
            margin: 20px 0 30px 0;
        }

        #images{
            position: relative;
            margin: auto;
            display: flex;
            flex-direction: row;
            justify-content: space-evenly;
            gap: 20px;
            flex-wrap: wrap;
        }

        figure{
            position: relative;
            width: 25%;
        }
        
        img{
            width: 100%;
        }

        figcaption{
            text-align: center;
            font-size: 13px;
            margin-top: 3px;
        }

        .delete-btn {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 18px;
            z-index: 1;
        }

        .wrapper {
            background-color: #ffffff;
            padding: 2em 3em;
            border-radius: 0.5em;
        }

        .container-cropper .image-container,
        .container-cropper .preview-container {
            width: 100%;
            height: 100%;
        }

        input[type="file"] {
            display: none;
        }

        .cropper-label {
            display: block;
            position: relative;
            font-size: 16px;
            text-align: center;
            width: 250px;
            padding: 10px 0;
            border-radius: 0.3em;
            margin: 16px auto;
            cursor: pointer;
        }

        img {
            display: block;
            max-width: 100%;
        }

        .image-container {
            width: 60%;
            margin: 0 auto;
        }

        .btns {
            display: flex;
            justify-content: center;
            gap: 1em;
            margin-top: 1em;
        }

        .btns button {
            font-size: 1em;
        }

        .btns a {
            border: 2px solid #025bee;
            background-color: #025bee;
            color: #ffffff;
            text-decoration: none;
            padding: 1em;
            font-size: 1em;
            border-radius: 0.3em;
        }
  
    </style>
</head>

<body>
    <section class="view">
        <div class="container d-flex align-items-center justify-content-center">
            <div class="main col-12 col-lg-10 m-3 mt-5">
                <form action="/admin/updateProduct/<%= product._id %>" enctype="multipart/form-data" id="updateProductForm">
                    <div class="p-5">
                        <h4 class=" fs-3 mb-4" style="color: #0f1923;">Edit product</h4>
                        <div class="input-box d-md-flex">
                            <div class="col-12 col-md-6">
                                <div class="mb-3 col-md-10">
                                    <label for="productName" class="form-label">Product name</label>
                                    <input type="text" class="form-control" name="productName" id="productName" value="<%= product.name %>" required>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productBrand" class="form-label">Product brand</label>
                                    <select class="form-select" name="productBrand" id="productBrand" required>    
                                        <% brands.forEach(brand => { %>
                                            <option value="<%= brand._id %>" <%= brand._id.toString() === product.brand.toString() ? 'selected' : "" %>>
                                                <%= brand.name %>
                                            </option>
                                           <% }) %> 
                                    </select>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productCategory" class="form-label">Product category</label>
                                    <select class="form-select" name="productCategory" id="productCategory" required>    
                                        <% categories.forEach(category => { %>
                                            <option value="<%= category._id %>" <%= category._id.toString() === product.category.toString() ? 'selected' : "" %>>
                                                <%= category.name %>
                                            </option>
                                           <% }) %> 
                                    </select>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productDescription" class="form-label">Product description</label>
                                    <textarea class="form-control" name="productDescription" id="productDescription" rows="5"  required style="resize : vertical"><%= product.description %></textarea>
                                </div>
                            </div>
                        
                            <div class="col-12 col-md-6">
                                <div class="mb-3 col-md-10">
                                    <label for="productColour" class="form-label">Product colour</label>
                                    <input type="text" class="form-control" name="productColour" id="productColour" value="<%= product.colour %>" required>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productStock" class="form-label">Product Stock</label>
                                    <input type="number" class="form-control" name="productStock" id="productStock" value="<%= product.noOfStock %>" required>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productRealPrice" class="form-label">Product real price</label>
                                    <input type="number" class="form-control" name="productRealPrice" id="productRealPrice" value="<%= product.realPrice %>" required>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productfferPrice" class="form-label">Product offer price</label>
                                    <input type="number" class="form-control" name="productOfferPrice" id="productOfferPrice" value="<%= product.offerPrice %>" required>
                                </div>
                                <div class="mb-3 col-md-10">
                                    <label for="productDiscountPercentage" class="form-label">Product discount percentage</label>
                                    <input type="number" class="form-control" name="productDiscountPercentage" id="productDiscountPercentage" value="<%= product.discountPercentage %>" required>
                                </div>
                            </div>
                        </div>
                        <div>
                            <div class="wrapper shadow mt-5" id="wrapper">
                                <div class="container container-cropper d-flex flex-column flex-md-row justify-content-center">
                                    <div class="col-md-6">
                                        <div class="image-container">
                                            <img id="image" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="preview-container d-flex align-center justify-content-center mt-2 mt-md-0" id="preview-container">
                                            <img id="preview-image" />
                                        </div>
                                    </div>
                                </div>
                                <input type="file" id="file" accept="image/*" />
                                <label class="cropper-label bg-info" for="file">Choose A Photo</label>
                                <p class="text-center" id="info">Please select <span id="count"></span> images</span></p>
                                <div class="options-cropper d-none d-flex flex-column flex-md-row">
                                    <div class="inputs d-flex col-12 col-md-6">
                                        <input class="form-control"
                                        type="number"
                                        id="height-input"
                                        placeholder="Enter Height"
                                        max="780"
                                        />
                                        <input class="form-control"
                                        type="number"
                                        id="width-input"
                                        placeholder="Enter Width"
                                        max="780"
                                        />
                                    </div>
                                    <div class="buttons gap-1 col-12 col-md-6 mt-2 d-flex justify-content-center">
                                        <button class="aspect-ratio-button btn btn-secondary">16:9</button>
                                        <button class="aspect-ratio-button btn btn-secondary">4:3</button>
                                        <button class="aspect-ratio-button btn btn-secondary">1:1</button>
                                        <button class="aspect-ratio-button btn btn-secondary">2:3</button>
                                        <button class="aspect-ratio-button btn btn-secondary">Free</button>
                                    </div>
                                </div>
                                <div class="btns">
                                  <button id="preview" class="btn btn-primary btn-sm">Preview</button>
                                  <button id="select" class="btn btn-primary btn-sm">Select</button>
                                </div>
                            </div>
                        </div>
                        <div class="my-5">
                            <div id="images"></div>
                        </div>
                        <div class="d-none" id="imageCount" data-image-count="<%= product.images.length %>"><%= product.images.length%></div>
                        
                        <div id="existingImageDiv">
                            <h6>Existing Images</h6>
                            <div class="row d-flex flex-row" style="justify-content: space-evenly; flex-wrap: wrap;">
                                <% for (let i = 0; i < product.images.length; i++) { %>
                                <div class="col-4" id="image<%= i + 1 %>">
                                    <div class="thumbnail col-6">
                                        <button class="close-btn" onclick="deleteImage('image<%= i + 1 %>','<%= product._id %>','<%= product.images[i]%>',event)">&times;</button>
                                        <div class="close-btn-background"></div>
                                        <img class="img-fluid" id="image<%= i + 1 %>" src="/static/images/ProductImages/<%= product.images[i] %>" alt="">
                                        <div class="caption">
                                            <h6 id="image<%= i + 1 %>">Image <%= i+1 %></h6>
                                        </div>
                                    </div>
                                </div>
                                <% } %>
                            </div>   
                        </div> 

                        <div class="mt-4">
                            <button type="" class="btn btn-warning" onclick="goBack(event)">Cancel</button>
                            <button type="" onclick="updateProduct(event)" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </form>
            </div>  
        </div>
    </section>
    

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        ////// For the croping and saving the images \\\\\\
        let imageArray = []
        let fileInput = document.getElementById("file");
        let image = document.getElementById("image");
        let selectButton = document.getElementById("select");
        let aspectRatio = document.querySelectorAll(".aspect-ratio-button");
        const previewButton = document.getElementById("preview");
        const previewImage = document.getElementById("preview-image");
        const options = document.querySelector(".options-cropper");
        const widthInput = document.getElementById("width-input");
        const heightInput = document.getElementById("height-input");
        let imageContainer = document.getElementById("images")
        let preview = document.getElementById("preview-container")
        let wrapper = document.getElementById("wrapper")
        let existingImageDiv = document.getElementById("existingImageDiv")
        var existImageCount = document.getElementById('imageCount').dataset.imageCount;
        let form = document.getElementById("updateProductForm")
        
        let cropper = "";
        let fileName = "";
        let imgSrc;
        let maxCount = 5;
        let selectedImageCount = 0;
        let possibleImageCount = 0;
        
        function check(){
            possibleImageCount = maxCount - existImageCount
            count.innerHTML = possibleImageCount
            if(existImageCount == 5){
                wrapper.classList.add("d-none")
            }else if(existImageCount == 0){
                existingImageDiv.classList.add("d-none")
            }else{
                wrapper.classList.remove("d-none")
            }
        }

        fileInput.onchange = () => {
            previewImage.src = "";
            heightInput.value = 0;
            widthInput.value = 0;
            selectButton.classList.add("d-none");

            let reader = new FileReader();
            reader.readAsDataURL(fileInput.files[0]);

            reader.onload = () => {
                image.setAttribute("src", reader.result);
                if (cropper) {
                cropper.destroy();
                }
                cropper = new Cropper(image);
                options.classList.remove("d-none");
                previewButton.classList.remove("d-none");
            };
            fileName = fileInput.files[0].name.split(".")[0];
            };

            aspectRatio.forEach((element) => {
                element.addEventListener("click", () => {
                    if (element.innerText == "Free") {
                    cropper.setAspectRatio(NaN);
                    } else {
                    cropper.setAspectRatio(eval(element.innerText.replace(":", "/")));
                    }
                });
            });

            heightInput.addEventListener("input", () => {
                const { height } = cropper.getImageData();
                if (parseInt(heightInput.value) > Math.round(height)) {
                    heightInput.value = Math.round(height);
                }

                let newHeight = parseInt(heightInput.value);
                cropper.setCropBoxData({ height: newHeight });
            });

            widthInput.addEventListener("input", () => {
                const { width } = cropper.getImageData();
                if (parseInt(widthInput.value) > Math.round(width)) {
                    widthInput.value = Math.round(width);
                }

                let newWidth = parseInt(widthInput.value);
                cropper.setCropBoxData({ width: newWidth });
            });

            previewButton.addEventListener("click", (e) => {
                e.preventDefault();
                selectButton.classList.remove("d-none");
                imgSrc = cropper.getCroppedCanvas({}).toDataURL();
                previewImage.src = imgSrc;
                preview.classList.add("border")
                preview.classList.add("p-3")
                preview.classList.add("mx-2")
                selectButton.setAttribute("href", imgSrc);
            });

            selectButton.addEventListener("click",function(event){
                event.preventDefault()

                if(selectedImageCount == possibleImageCount){
                    swal.fire({
                        title: "Image limit",
                        text: `Sorry you can only select ${possibleImageCount} image right now.`,
                        icon: "info",
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    })
                    return false
                }
                
                let figure = document.createElement("figure");
                let img = document.createElement("img");
                img.setAttribute("src",imgSrc);
                
                let deleteButton = document.createElement("button");
                deleteButton.classList.add("delete-btn");
                deleteButton.innerHTML = "&times;";

                deleteButton.addEventListener('click', () => {
                    imageContainer.removeChild(figure);
                    imageArray = imageArray.filter(src => src !== imgSrc);
                    selectedImageCount--
                    possibleImageCount++;
                    count.innerHTML = possibleImageCount;
                    if (wrapper.classList.contains("d-none") && possibleImageCount > 0) {
                        wrapper.classList.remove("d-none");
                    }
                });

                figure.appendChild(deleteButton);
                figure.appendChild(img);      
                imageContainer.appendChild(figure); 
                imageArray.push(imgSrc)
                selectedImageCount++
                possibleImageCount--;
                count.innerHTML = possibleImageCount;

                if (selectedImageCount == maxCount || possibleImageCount == 0) {
                    wrapper.classList.add("d-none");
                }
            })

            window.onload = () => {
                selectButton.classList.add("d-none");
                options.classList.add("d-none");
                previewButton.classList.add("d-none");

                options.addEventListener("click", function (e) {
                    e.preventDefault();
                });
                check();
            };

        ////// fetch to send the form data \\\\\\
        function updateProduct(e){
            e.preventDefault()

            console.log('Existing image count : ',existImageCount)
            console.log("selected image count : ",selectedImageCount)

            let totalImageCount = parseInt(existImageCount) + selectedImageCount;
            if (totalImageCount !== 5) {
                swal.fire({
                    title: "Product image alert",
                    text: `The product must have exactly 5 images.`,
                    icon: "info",
                    timer: 2000,
                    timerProgressBar: true,
                    showConfirmButton: false
                });
                return false;
            }

            const productName = document.getElementById("productName").value
            const productBrand = document.getElementById("productBrand").value
            const productCategory = document.getElementById("productCategory").value
            const productDescription = document.getElementById("productDescription").value
            const productColour = document.getElementById("productColour").value
            const productStock = document.getElementById("productStock").value
            const productRealPrice = document.getElementById("productRealPrice").value
            const productOfferPrice = document.getElementById("productOfferPrice").value
            const productDiscountPercentage = document.getElementById("productDiscountPercentage").value
            
            const formData = new FormData()
            formData.append("productName",productName)            
            formData.append("productBrand",productBrand)            
            formData.append("productCategory",productCategory)            
            formData.append("productDescription",productDescription)            
            formData.append("productColour",productColour)            
            formData.append("productStock",productStock)            
            formData.append("productRealPrice",productRealPrice)            
            formData.append("productOfferPrice",productOfferPrice)            
            formData.append("productDiscountPercentage",productDiscountPercentage)
            
            imageArray.forEach((imageDataUrl, index) => {
                let byteString = atob(imageDataUrl.split(',')[1]);
                let mimeString = imageDataUrl.split(',')[0].split(':')[1].split(';')[0];
                let ab = new ArrayBuffer(byteString.length);
                let ia = new Uint8Array(ab);
                for (let i = 0; i < byteString.length; i++) {
                    ia[i] = byteString.charCodeAt(i);
                }
                let blob = new Blob([ab], {type: mimeString});
                formData.append(`productImages`, blob, `image${index}.png`);
            });
            
            fetch(form.action, {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(()=>{
                        window.location.href = "/admin/products"
                    })
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
        }


       ////// Cancel button goBack function \\\\\\
       function goBack(event) {
        event.preventDefault();
        window.location.href = '/admin/products'
        }

        ////// For the deletion of the existing images in databse \\\\\\
        function deleteImage(imageId, productId, productImage,event) {
            existImageCount--
            
            console.log("Product id = ",productId)
            console.log("image Name =",productImage)
            event.preventDefault();

            fetch('/admin/deleteProductImage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId : productId, productImage : productImage }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    check()
                    let thumbnail = document.getElementById(imageId);
                    thumbnail.parentElement.removeChild(thumbnail);
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
        }

    </script>

<!-- Admin foter -->
<%-include("../adminpartials/admin_footer.ejs")%>